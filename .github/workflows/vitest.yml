name: Vitest DOM tests

on:
  push:
    branches:
      - main
  pull_request:
    branches-ignore:
      - 'dependabot/npm_and_yarn/*'
      - 'dependabot/composer/*'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      js: ${{ steps.filter.outputs.js }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          js:
            - '**/*.vue'
            - '**/*.js'
            - '**/*.ts'
            - '**/*.tsx'

  vitest:
    needs: changes
    if: ${{ needs.changes.outputs.js == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    # Check for existing artifacts from phpunit job
    - name: Download build artifacts
      id: download-artifacts
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: build-assets
        path: ./
    
    # This is required because Ziggy is used from composer vendor.
    - name: setup php
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, fileinfo
    
    # Cache Composer dependencies if no artifacts were downloaded
    - name: Get Composer cache directory
      if: steps.download-artifacts.outcome != 'success'
      id: composer-cache-dir
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    - name: Cache Composer dependencies
      if: steps.download-artifacts.outcome != 'success'
      id: cache-composer
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    
    # Install Composer dependencies if no artifacts were downloaded
    - name: Install Composer dependencies
      if: steps.download-artifacts.outcome != 'success'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    
    # Cache NPM dependencies
    - name: Cache NPM dependencies
      if: steps.download-artifacts.outcome != 'success'
      id: cache-npm
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-npm-
    
    # Install npm dependencies if no artifacts were downloaded
    - name: NPM Install
      if: steps.download-artifacts.outcome != 'success'
      run: npm ci
    
    # Run build if no artifacts were downloaded
    - name: NPM Build
      if: steps.download-artifacts.outcome != 'success'
      run: npm run build
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Execute tests via Vitest with coverage
      run: LARAVEL_BYPASS_ENV_CHECK=1 npm run coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        verbose: true
        files: ./coverage/clover.xml
        flags: frontend
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    # Save test coverage as artifact
    - name: Archive coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: vitest-coverage
        path: ./coverage
        retention-days: 1
